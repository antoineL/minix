#!/bin/sh
#
#	mkboot 2.0 - Install a new revision and make it bootable
#							Author: Kees J. Bot

# This script could be run in cross-compilation builds
: ${HOST_SH:=sh}
: ${AWK:=awk}

usage() {
	echo "Usage: $0 hdboot [DESTDIR]" >&2
	exit 1
}

find_real_root() {
	# Get the device table.
	FSTAB=/etc/fstab
	touch $FSTAB
	if grep -q "Poor man" $FSTAB
	then	. $FSTAB
	else	root=$( ${AWK} <$FSTAB '($2=="/") { print $1 }' )
	fi
	
	# The real root device may be the RAM disk.
	realroot=`printroot -r`
	
	# If it's an initial fstab, pretend root is real root
	if [ "$root" = "/dev/ROOT" -o -z "$root" ]
	then	root=$realroot
	fi
	
	# We need the root device.
	if [ $realroot = $root ]
	then
		DESTDIR=
	else
		umount $root 2>/dev/null
		mount $root /mnt || exit
		DESTDIR=/mnt
	fi
}

rotate_oldest() {
	base_dir="$1"
	set -- `ls -t "$DESTDIR/$base_dir"`

	[ "x$1" != "x.temp" ] || shift # do not consider recently added .temp
	case $# in
	0|1|2|3)
		# Not much there, do not remove a thing.
		;;
	*)
		# Remove the third-newest image in /boot/minix/, but
		# only if there's an older one (which is kept). 
		echo "rm $root:$base_dir/$3"
		rm -rf "$DESTDIR/$base_dir/$3"
	esac
}


# If no DESTDIR specified, then act on / or on the current chroot
DESTDIR=
# Check arguments.
case "$#:$1" in
1:hdboot )
	action=$1
	rootfs=1
	;;
2:hdboot )
	action=$1 DESTDIR=$2
	rootfs=0 # Do not try to guess where the real root FS is...
	;;
*)	usage
esac

if [ $rootfs != 0 ]
then
	find_real_root
fi

case $action in
hdboot)
	version=`${HOST_SH} ../sys/conf/osrelease.sh`

	# Retrieve the git revision; this only succeeds
	# if git is available, it's a git checkout, *and*
	# there are no uncommitted changes.
	if git diff --quiet 2>/dev/null
	then	gitrev="-`git describe --always`"
	fi

	revision=`cat revision 2>/dev/null`

	oldrev=$revision

	if [ -z "$revision" ]
	then
		revision=0
		rrevision=""
		gitrev=""
	else
		revision=`expr $revision + 1`
		rrevision=r$revision
	fi

	target="${version}${rrevision}${gitrev}"

	# Rotate system processes. We assume latest ones are in
	# /boot/minix/.temp and we maintain /boot/minix/ by ourselves.
	rotate_oldest "/boot/minix"

	[ -d $DESTDIR/boot/minix/.temp ] || exit 1
	rm -rf $DESTDIR/boot/minix/"$target"/
	echo "New system image at " $root:/boot/minix/"$target"/
	mv $DESTDIR/boot/minix/.temp $DESTDIR/boot/minix/"$target"
	rm -f $DESTDIR/boot/minix_latest
	ln -s minix/"$target" $DESTDIR/boot/minix_latest 

	# Save the revision number.
	test "$revision" != "$oldrev" && echo $revision >revision

	# XXX
	# Consider calling update_bootcfg at this point,
	# since the real rootfs (not the RAM disk) is mounted...
	#
	# However that script needs to be updated for $DESTDIR

	test $rootfs != 0 -a $realroot != $root && umount $root

	echo "Done."
	;;
esac
sync
exit 0
